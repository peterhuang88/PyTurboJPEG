#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Sep 10 19:49:58 2018

@author: peter
"""

class TurboJPEG(object):
    """A Python wrapper of libjpeg-turbo for decoding and encoding JPEG image."""
    def __init__(self, lib_path=None):
        # call library from location in filesystem
        turbo_jpeg = cdll.LoadLibrary(DEFAULT_LIB_PATH[platform.system()] if lib_path is None else lib_path)
        
        # make C-function a field of the object
        self.__decompress = turbo_jpeg.tjDecompress2
        
        # define types of the arguments that need to be passed into C function
        self.__decompress.argtypes = [
            c_void_p, POINTER(c_ubyte), c_ulong, POINTER(c_ubyte),
            c_int, c_int, c_int, c_int, c_int]
        
        # define return type of C function
        self.__decompress.restype = c_int
        

# calling the function from within the object
status = self.__decompress(
                handle, src_addr, jpeg_array.size, dest_addr, scaled_width,
                0, scaled_height, pixel_format, 0)
        